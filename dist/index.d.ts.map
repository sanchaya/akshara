{"mappings":"AAAA;IACE,OAAO,YAAY;IACnB,MAAM,WAAW;IACjB,UAAU,eAAe;IACzB,OAAO,YAAY;IACnB,YAAY,iBAAiB;CAC9B;AAED,uBAA8B,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAElD;IACE,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC;IACzB,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC;IACvB,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;IACtB,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC;IACpB,QAAQ,CAAC,UAAU,CAAC,EAAE,eAAe,CAAC;gBAGpC,IAAI,EAAE,SAAS,EACf,KAAK,EAAE,MAAM,EACb,GAAG,EAAE,MAAM,EACX,UAAU,CAAC,EAAE,eAAe;CAW/B;AChCD;IACE,KAAK,UAAU;IACf,QAAQ,aAAa;CACtB;AAQD;IACE,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC;IACzB,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC;gBAEX,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM;CAI3C;AKZD,eAAe;IACb,GAAG,EAAE,KAAK,EAAE,CAAC;IACb,QAAQ,EAAE,KAAK,EAAE,CAAC;IAClB,MAAM,EAAE,KAAK,EAAE,CAAC;IAChB,OAAO,EAAE,KAAK,EAAE,CAAC;IACjB,WAAW,EAAE,KAAK,EAAE,CAAC;IACrB,KAAK,EAAE,MAAM,EAAE,CAAC;IAChB,OAAO,EAAE,KAAK,EAAE,CAAC;IACjB,YAAY,EAAE,KAAK,EAAE,CAAC;CACvB,CAAC;AA+BF,QAAA,MAAM,QAAQ;qBA7BU,MAAM,KAAG,OAAO;;;CAiCvC,CAAC;AAEF,eAAe,QAAQ,CAAC","sources":["src/src/token.ts","src/src/varna.ts","src/src/utils.ts","src/src/tamil-char-types.ts","src/src/char.ts","src/src/tokenize.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,"import * as utils from \"./utils\";\r\n\r\nimport { tokenize } from \"./tokenize\";\r\n\r\nimport { Token, TokenType } from \"./token\";\r\nimport { Varna, VarnaType } from \"./varna\";\r\n\r\ntype Results = {\r\n  all: Token[];\r\n  aksharas: Token[];\r\n  varnas: Varna[];\r\n  symbols: Token[];\r\n  whitespaces: Token[];\r\n  chars: string[];\r\n  invalid: Token[];\r\n  unrecognised: Token[];\r\n};\r\n\r\nconst analyse = (input: string): Results => {\r\n  const tokens = tokenize(input);\r\n\r\n  const aksharas = utils.filterTokens(tokens, TokenType.Akshara);\r\n\r\n  const varnas = utils.extractVarnas(aksharas);\r\n\r\n  const chars = input.split(\"\");\r\n\r\n  const symbols = utils.filterTokens(tokens, TokenType.Symbol);\r\n\r\n  const invalidChars = utils.filterTokens(tokens, TokenType.Invalid);\r\n\r\n  const whitespaces = utils.filterTokens(tokens, TokenType.Whitespace);\r\n\r\n  const unrecognisedChars = utils.filterTokens(tokens, TokenType.Unrecognised);\r\n\r\n  return {\r\n    all: tokens,\r\n    aksharas: aksharas,\r\n    varnas: varnas,\r\n    chars: chars,\r\n    symbols: symbols,\r\n    invalid: invalidChars,\r\n    whitespaces: whitespaces,\r\n    unrecognised: unrecognisedChars,\r\n  };\r\n};\r\n\r\nconst Aksharas = {\r\n  analyse,\r\n  TokenType,\r\n  VarnaType,\r\n};\r\n\r\nexport default Aksharas;\r\n\r\nexport { TokenType, VarnaType };\r\n"],"names":[],"version":3,"file":"index.d.ts.map","sourceRoot":"../"}